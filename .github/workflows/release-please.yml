name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: 🚀 Create Release PR or Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  # Build and test when a release is created
  build-and-upload:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}

    env:
      BUN_VERSION: '1.2.17'

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📂 Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-release-${{ hashFiles('**/bun.lockb', '**/package.json') }}

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🧪 Run tests
        run: bun test --coverage

      - name: 🔍 TypeScript Check
        run: bun run typecheck

      - name: 🏗️ Build project
        run: bun run build

      - name: 📦 Create distribution archive
        run: |
          mkdir -p release-assets
          TAG_NAME="${{ needs.release-please.outputs.tag_name }}"
          FILENAME="${TAG_NAME//\//-}"  # Replace / with -
          tar -czf release-assets/${FILENAME}.tar.gz \
            dist/ \
            package.json \
            README.md \
            CHANGELOG.md \
            LICENSE \
            examples/

      - name: 📤 Upload Release Assets
        run: |
          TAG_NAME="${{ needs.release-please.outputs.tag_name }}"
          FILENAME="${TAG_NAME//\//-}"  # Replace / with -
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"./release-assets/${FILENAME}.tar.gz" \
            "${{ needs.release-please.outputs.upload_url }}?name=${FILENAME}.tar.gz&label=${FILENAME}.tar.gz"

      # Future: NPM publishing when ready
      # - name: 📦 Publish to NPM
      #   if: ${{ !contains(needs.release-please.outputs.tag_name, '-') }}
      #   run: |
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      #     npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}